from flask import Flask, render_template, request, jsonify, session
import os
import requests
from datetime import datetime

app = Flask(__name__)
app.secret_key = os.urandom(24)  # 用于在会话中存储聊天记录


# 从环境变量或会话中获取 API 密钥
def get_api_key():
    return session.get("api_key") or os.getenv("API_KEY")


BASE_URL = "https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions"


# 定义函数与模型交互
def ask_question(prompt):
    api_key = get_api_key()
    if not api_key:
        return "请先设置 API Key"

    headers = {"Authorization": f"Bearer {api_key}", "Content-Type": "application/json"}

    data = {
        "model": "qwen-plus",
        "messages": [
            {"role": "system", "content": "You are a helpful assistant."},
            {"role": "user", "content": prompt},
        ],
        "temperature": 0.7,
        "max_tokens": 150,
    }

    try:
        response = requests.post(BASE_URL, headers=headers, json=data)
        if response.status_code == 200:
            content = (
                response.json()
                .get("choices", [{}])[0]
                .get("message", {})
                .get("content", "No response from API")
            )
            return content
        else:
            error_message = f"Error: {response.status_code}"
            if response.text:
                try:
                    error_detail = response.json()
                    error_message += f", {error_detail.get('error', {}).get('message', response.text)}"
                except:
                    error_message += f", {response.text}"
            return error_message
    except Exception as e:
        return f"Request failed: {str(e)}"


# 路由设置
@app.route("/", methods=["GET"])
def index():
    if "conversation" not in session:
        session["conversation"] = []  # 初始化会话记录
    return render_template("index.html", conversation=session["conversation"])


@app.route("/ask", methods=["POST"])
def ask():
    if not get_api_key():
        return jsonify({"error": "请先设置 API Key"}), 401

    user_input = request.json.get("user_input")
    if not user_input:
        return jsonify({"error": "No input provided"}), 400

    response = ask_question(user_input)
    current_time = datetime.now().strftime("%H:%M:%S")

    # 更新会话记录
    session["conversation"].append(
        {"role": "user", "content": user_input, "timestamp": current_time}
    )
    session["conversation"].append(
        {"role": "assistant", "content": response, "timestamp": current_time}
    )

    return jsonify(
        {"user_input": user_input, "response": response, "timestamp": current_time}
    )


@app.route("/update_api_key", methods=["POST"])
def update_api_key():
    api_key = request.json.get("api_key")
    if api_key:
        session["api_key"] = api_key
        return jsonify({"status": "success"})
    return jsonify({"status": "error", "message": "No API key provided"}), 400


if __name__ == "__main__":
    app.run(host="0.0.0.0", port=5001, debug=True) 